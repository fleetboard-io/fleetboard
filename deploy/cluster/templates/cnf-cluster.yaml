---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.cluster.localnamespace }}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cnf-nauti
  namespace: nauti-system
spec:
  selector:
    matchLabels:
      app: cnf-nauti
  template:
    metadata:
      labels:
        app: cnf-nauti
        router.nauti.io/cnf: "true"
    spec:
      serviceAccountName: octopus
      hostNetwork: false
      containers:
        - name: cnf-nauti
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}/cnf:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            privileged: true
          command:
            - ./cnf
          args:
            - --shared-namespace=syncer-operator
            - --local-namespace=syncer-operator
            - --as-hub={{ .Values.cluster.hub }}}
            - --as-cluster=true
            - --hub-secret-namespace=nauti-system
            - --hub-secret-name=octopus
            - --hub-url={{ .Values.hub.hubURL }}
          env:
            - name: NAUTI_CLUSTERID
              value: {{ .Values.cluster.clusterID }}
            - name: NAUTI_BOOTSTRAPTOKEN
              value: re51os.131tn13kek2iaqoz
            - name: NAUTI_PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAUTI_PODNAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: "1"
              memory: 1000Mi
            requests:
              cpu: 200m
              memory: 200Mi
      nodeSelector:
        kubernetes.io/os: "linux"